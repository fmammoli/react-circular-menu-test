[{"/Users/fmammoli/Projects/react-circular-test/src/reportWebVitals.js":"1","/Users/fmammoli/Projects/react-circular-test/src/App.js":"2","/Users/fmammoli/Projects/react-circular-test/src/CircularMenu.js":"3","/Users/fmammoli/Projects/react-circular-test/src/index.js":"4"},{"size":362,"mtime":1610412461083,"results":"5","hashOfConfig":"6"},{"size":3568,"mtime":1610547762957,"results":"7","hashOfConfig":"6"},{"size":3945,"mtime":1610546880510,"results":"8","hashOfConfig":"6"},{"size":500,"mtime":1610412461080,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"swugm9",{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/fmammoli/Projects/react-circular-test/src/reportWebVitals.js",[],"/Users/fmammoli/Projects/react-circular-test/src/App.js",["20","21"],"import React, { useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport {\n  CircularMenu,\n  CircularMenuItem,\n  CircularMenuRootItem,\n  SubMenuItem,\n} from \"./CircularMenu\";\nfunction App() {\n  const [rootItem, setRootItem] = useState(false);\n\n  const [subMenuRoot, setSubMenuRoot] = useState(false);\n  const itemData = {\n    rotation: 20,\n    move: 150,\n  };\n\n  const [subMenuThreeRoot, setSubMenuThreeRoot] = useState(false);\n  const itemThreeData = {\n    rotation: 180,\n    move: 200,\n  };\n\n  useEffect(() => {\n    console.log(subMenuThreeRoot);\n  }, [subMenuThreeRoot]);\n\n  function handleRootClick() {\n    console.log(\"sub-menu\", subMenuRoot);\n    console.log(\"root-menu\", rootItem);\n\n    if (subMenuThreeRoot) {\n      setSubMenuThreeRoot((v) => !v);\n    }\n    if (subMenuRoot) {\n      setSubMenuRoot((v) => !v);\n    }\n    if (subMenuRoot || subMenuThreeRoot) {\n      setTimeout(() => {\n        setRootItem((v) => !v);\n      }, 800);\n    } else {\n      setRootItem((v) => !v);\n    }\n  }\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <header className=\"title\">\n        <h1>Circular Menu Test</h1>\n      </header>\n      <CircularMenu setRootItem={handleRootClick}>\n        <SubMenuItem\n          isSubItem\n          position={itemData}\n          id=\"one-three\"\n          title=\"One-three\"\n          rotation={0}\n          move={itemData.move}\n          rootIsActive={rootItem}\n          parentIsActive={subMenuRoot}\n        ></SubMenuItem>\n        <SubMenuItem\n          isSubItem\n          position={itemData}\n          id=\"one-two\"\n          title=\"One-two\"\n          rotation={90}\n          move={itemData.move}\n          rootIsActive={rootItem}\n          parentIsActive={subMenuRoot}\n        ></SubMenuItem>\n        <SubMenuItem\n          isSubItem\n          position={itemData}\n          id=\"one-one\"\n          title=\"One-one\"\n          rotation={270}\n          move={itemData.move}\n          rootIsActive={rootItem}\n          parentIsActive={subMenuRoot}\n        ></SubMenuItem>\n        <CircularMenuItem\n          hasSubItems\n          id=\"one\"\n          title=\"One\"\n          rotation={itemData.rotation}\n          move={itemData.move}\n          isActive={rootItem}\n          setActive={setSubMenuRoot}\n        ></CircularMenuItem>\n\n        <CircularMenuItem\n          id=\"two\"\n          title=\"Two\"\n          rotation={90}\n          move={itemData.move}\n          isActive={rootItem}\n        ></CircularMenuItem>\n\n        <SubMenuItem\n          isSubItem\n          position={itemThreeData}\n          id=\"three-one\"\n          title=\"Three-one\"\n          rotation={40}\n          move={itemThreeData.move - 50}\n          rootIsActive={rootItem}\n          parentIsActive={subMenuThreeRoot}\n        ></SubMenuItem>\n\n        <SubMenuItem\n          isSubItem\n          position={itemThreeData}\n          id=\"three-two\"\n          title=\"Three-two\"\n          rotation={350}\n          move={itemThreeData.move - 50}\n          rootIsActive={rootItem}\n          parentIsActive={subMenuThreeRoot}\n        ></SubMenuItem>\n\n        <CircularMenuItem\n          hasSubItems\n          id=\"three\"\n          title=\"Three\"\n          rotation={180}\n          move={itemThreeData.move}\n          isActive={rootItem}\n          setActive={setSubMenuThreeRoot}\n        ></CircularMenuItem>\n\n        <CircularMenuItem\n          id=\"four\"\n          title=\"Four\"\n          rotation={270}\n          move={itemData.move}\n          isActive={rootItem}\n        ></CircularMenuItem>\n      </CircularMenu>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/fmammoli/Projects/react-circular-test/src/CircularMenu.js",["22","23","24","25"],"import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction SubMenuItem({\n  id,\n  position,\n  title,\n  rotation,\n  move,\n  rootIsActive,\n  parentIsActive,\n}) {\n  function handleClick(e) {\n    e.preventDefault();\n    console.log(title, \" click\");\n  }\n\n  return (\n    <div\n      className=\"menu-item rotation-container\"\n      style={{ transform: `rotate(${position.rotation}deg)` }}\n    >\n      <div\n        className=\"menu-item position-container\"\n        style={\n          rootIsActive\n            ? {\n                transform: `translateX(${position.move}px) `,\n              }\n            : null\n        }\n      >\n        <div\n          className=\"grid-container menu-item sub-menu-item\"\n          style={{\n            transform: `rotate(${rotation}deg)`,\n          }}\n        >\n          <div\n            id={`item-${id}`}\n            className=\"center-grid ball smaller-ball circular-item sub-menu-item\"\n            style={\n              parentIsActive ? { transform: `translate(${move}px,0px)` } : null\n            }\n            onClick={handleClick}\n          >\n            <div\n              className=\"ball smaller-ball background-container sub-item-background\"\n              style={{\n                transform: `rotate(-${position.rotation + rotation}deg)`,\n              }}\n            >\n              <div className=\"menu-item-label sub-menu-item-label\">{title}</div>\n            </div>\n          </div>\n          <div className=\"center-grid line-rotation-container\">\n            <div\n              className=\"line smaller-line\"\n              style={\n                parentIsActive ? { transform: `scaleX(${move / 80})` } : null\n              }\n            ></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction CircularMenuItem({\n  title,\n  id,\n  rotation = 0,\n  move = 200,\n  isActive,\n  setActive,\n  hasSubItems,\n  children,\n}) {\n  const [isRootActive, setIsRootActive] = useState(false);\n\n  function handleClick(event) {\n    event.preventDefault();\n    console.log(title, \" clicked\");\n    //setIsRootActive((v) => !v);\n    if (hasSubItems) {\n      setActive((v) => !v);\n    }\n  }\n\n  return (\n    <div\n      className=\"grid-container menu-item\"\n      style={{ transform: `rotate(${rotation}deg)` }}\n    >\n      <div\n        className=\"center-grid circular-item\"\n        style={isActive ? { transform: `translate(${move}px,0px)` } : null}\n        onClick={handleClick}\n      >\n        <div\n          id={`item-${id}`}\n          className=\"background-container ball\"\n          style={{ transform: `rotate(-${rotation}deg)` }}\n        >\n          <div\n            className=\"menu-item-label\"\n            // style={{ transform: `rotate(-${rotation}deg)` }}\n          >\n            {title}\n          </div>\n        </div>\n      </div>\n      <div className=\"center-grid\">\n        <div\n          className=\"line\"\n          style={isActive ? { transform: `scaleX(${move / 100})` } : null}\n        ></div>\n      </div>\n    </div>\n  );\n}\n\nfunction CircularMenuRootItem(props) {\n  return (\n    <div className=\"grid-container menu-item root-item\">\n      <div\n        id=\"root-item\"\n        onClick={props.handleClick}\n        className=\"center-grid circular-item\"\n      >\n        <div className=\"ball background-container\">\n          <p className=\"menu-item-label\">{props.title}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction CircularMenu(props) {\n  function handleClick(event) {\n    event.preventDefault();\n    console.log(\"clicked\");\n    props.setRootItem();\n  }\n\n  console.log(props.children);\n\n  let state = {\n    actives: [],\n  };\n\n  return (\n    <nav className=\"menu-nav float-animation\">\n      <div className=\"menu\">\n        {props.children}\n        <CircularMenuRootItem\n          handleClick={handleClick}\n          title=\"Root\"\n        ></CircularMenuRootItem>\n      </div>\n    </nav>\n  );\n}\n\nexport { CircularMenu, CircularMenuItem, CircularMenuRootItem, SubMenuItem };\n","/Users/fmammoli/Projects/react-circular-test/src/index.js",[],{"ruleId":"26","severity":1,"message":"27","line":2,"column":8,"nodeType":"28","messageId":"29","endLine":2,"endColumn":12},{"ruleId":"26","severity":1,"message":"30","line":7,"column":3,"nodeType":"28","messageId":"29","endLine":7,"endColumn":23},{"ruleId":"26","severity":1,"message":"31","line":2,"column":27,"nodeType":"28","messageId":"29","endLine":2,"endColumn":36},{"ruleId":"26","severity":1,"message":"32","line":80,"column":10,"nodeType":"28","messageId":"29","endLine":80,"endColumn":22},{"ruleId":"26","severity":1,"message":"33","line":80,"column":24,"nodeType":"28","messageId":"29","endLine":80,"endColumn":39},{"ruleId":"26","severity":1,"message":"34","line":149,"column":7,"nodeType":"28","messageId":"29","endLine":149,"endColumn":12},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'CircularMenuRootItem' is defined but never used.","'useEffect' is defined but never used.","'isRootActive' is assigned a value but never used.","'setIsRootActive' is assigned a value but never used.","'state' is assigned a value but never used."]