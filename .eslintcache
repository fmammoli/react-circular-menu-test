[{"/Users/fmammoli/Projects/react-circular-test/src/reportWebVitals.js":"1","/Users/fmammoli/Projects/react-circular-test/src/App.js":"2","/Users/fmammoli/Projects/react-circular-test/src/CircularMenu.js":"3","/Users/fmammoli/Projects/react-circular-test/src/index.js":"4","/Users/fmammoli/Projects/react-circular-test/src/CustomMenu.js":"5","/Users/fmammoli/Projects/react-circular-test/src/TextPage.js":"6"},{"size":362,"mtime":1610412461083,"results":"7","hashOfConfig":"8"},{"size":21891,"mtime":1638383650560,"results":"9","hashOfConfig":"8"},{"size":7656,"mtime":1638384882212,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":1610412461080,"results":"11","hashOfConfig":"8"},{"size":18086,"mtime":1623790279745,"results":"12","hashOfConfig":"8"},{"size":136,"mtime":1623790392375,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"r3nrkr",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/fmammoli/Projects/react-circular-test/src/reportWebVitals.js",[],["28","29"],"/Users/fmammoli/Projects/react-circular-test/src/App.js",["30","31"],"import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Particles from \"react-tsparticles\";\nimport CustomMenu from \"./CustomMenu\";\n\nimport TextPage from \"./TextPage\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const containerRef = React.useRef();\n\n  React.useEffect(() => {\n    if (containerRef && containerRef.current) {\n      console.log(containerRef.current);\n\n      // if (containerRef.current.plugins.get(\"emitters\").array[0].paused) {\n      //   setTimeout(() => {\n      //     containerRef.current.plugins.get(\"emitters\").array[0].play();\n      //   }, 3000);\n      // } else {\n      //   console.log(\"paused\");\n      //   setTimeout(() => {\n      //     containerRef.current.plugins.get(\"emitters\").array[0].pause();\n      //   }, 3000);\n      // }\n    }\n  });\n\n  // const optionsWithEmmiter = {\n  //   autoPlay: true,\n  //   background: {\n  //     color: {\n  //       value: \"#ffffff\",\n  //     },\n  //     image: \"\",\n  //     position: \"\",\n  //     repeat: \"\",\n  //     size: \"\",\n  //     opacity: 1,\n  //   },\n  //   backgroundMask: {\n  //     composite: \"destination-out\",\n  //     cover: {\n  //       color: {\n  //         value: \"#fff\",\n  //       },\n  //       opacity: 1,\n  //     },\n  //     enable: false,\n  //   },\n  //   fullScreen: {\n  //     enable: true,\n  //     zIndex: -1,\n  //   },\n  //   detectRetina: true,\n  //   fpsLimit: 60,\n  //   infection: {\n  //     cure: false,\n  //     delay: 0,\n  //     enable: false,\n  //     infections: 0,\n  //     stages: [],\n  //   },\n  //   interactivity: {\n  //     detectsOn: \"window\",\n  //     events: {\n  //       onClick: {\n  //         enable: true,\n  //         mode: [\"repulse\"],\n  //       },\n  //       onDiv: {\n  //         selectors: [\".ball\"],\n  //         enable: true,\n  //         mode: [\"bounce\"],\n  //         type: \"circle\",\n  //       },\n  //       onHover: {\n  //         enable: true,\n  //         mode: [\"attract\", \"connect\"],\n  //         parallax: {\n  //           enable: false,\n  //           force: 2,\n  //           smooth: 10,\n  //         },\n  //       },\n  //       resize: true,\n  //     },\n  //     modes: {\n  //       attract: {\n  //         distance: 200,\n  //         duration: 0.4,\n  //         easing: \"ease-out-quad\",\n  //         factor: 1,\n  //         maxSpeed: 30,\n  //         speed: 1,\n  //       },\n  //       bounce: {\n  //         distance: 200,\n  //       },\n  //       bubble: {\n  //         distance: 200,\n  //         duration: 0.4,\n  //       },\n  //       connect: {\n  //         distance: 80,\n  //         links: {\n  //           opacity: 0.5,\n  //         },\n  //         radius: 60,\n  //       },\n  //       grab: {\n  //         distance: 100,\n  //         links: {\n  //           blink: false,\n  //           consent: false,\n  //           opacity: 1,\n  //         },\n  //       },\n  //       light: {\n  //         area: {\n  //           gradient: {\n  //             start: {\n  //               value: \"#ffffff\",\n  //             },\n  //             stop: {\n  //               value: \"#000000\",\n  //             },\n  //           },\n  //           radius: 1000,\n  //         },\n  //         shadow: {\n  //           color: {\n  //             value: \"#000000\",\n  //           },\n  //           length: 2000,\n  //         },\n  //       },\n  //       push: {\n  //         quantity: 4,\n  //       },\n  //       remove: {\n  //         quantity: 2,\n  //       },\n  //       repulse: {\n  //         distance: 200,\n  //         duration: 0.4,\n  //         factor: 100,\n  //         speed: 1,\n  //         maxSpeed: 50,\n  //         easing: \"ease-out-quad\",\n  //       },\n  //       slow: {\n  //         factor: 3,\n  //         radius: 200,\n  //       },\n  //       trail: {\n  //         delay: 0.005,\n  //         pauseOnStop: false,\n  //         quantity: 5,\n  //         particles: {\n  //           color: {\n  //             value: \"#ff0000\",\n  //             animation: {\n  //               enable: true,\n  //               speed: 400,\n  //               sync: true,\n  //             },\n  //           },\n  //           collisions: {\n  //             enable: false,\n  //           },\n  //           links: {\n  //             enable: false,\n  //           },\n  //           move: {\n  //             outModes: {\n  //               default: \"destroy\",\n  //             },\n  //             speed: 1,\n  //           },\n  //           size: {\n  //             value: 5,\n  //             animation: {\n  //               enable: true,\n  //               speed: 5,\n  //               minimumValue: 1,\n  //               sync: true,\n  //               startValue: \"min\",\n  //               destroy: \"max\",\n  //             },\n  //           },\n  //         },\n  //       },\n  //     },\n  //   },\n  //   manualParticles: [],\n  //   motion: {\n  //     disable: false,\n  //     reduce: {\n  //       factor: 4,\n  //       value: true,\n  //     },\n  //   },\n  //   particles: {\n  //     bounce: {\n  //       horizontal: {\n  //         random: {\n  //           enable: false,\n  //           minimumValue: 0.1,\n  //         },\n  //         value: 1,\n  //       },\n  //       vertical: {\n  //         random: {\n  //           enable: false,\n  //           minimumValue: 0.1,\n  //         },\n  //         value: 1,\n  //       },\n  //     },\n  //     collisions: {\n  //       bounce: {\n  //         horizontal: {\n  //           random: {\n  //             enable: false,\n  //             minimumValue: 0.1,\n  //           },\n  //           value: 1,\n  //         },\n  //         vertical: {\n  //           random: {\n  //             enable: false,\n  //             minimumValue: 0.1,\n  //           },\n  //           value: 1,\n  //         },\n  //       },\n  //       enable: true,\n  //       mode: \"bounce\",\n  //       overlap: {\n  //         enable: true,\n  //         retries: 0,\n  //       },\n  //     },\n  //     color: {\n  //       value: \"#f00\",\n  //       animation: {\n  //         h: {\n  //           count: 0,\n  //           enable: true,\n  //           offset: 0,\n  //           speed: 50,\n  //           sync: false,\n  //         },\n  //         s: {\n  //           count: 0,\n  //           enable: false,\n  //           offset: 0,\n  //           speed: 1,\n  //           sync: true,\n  //         },\n  //         l: {\n  //           count: 0,\n  //           enable: false,\n  //           offset: 0,\n  //           speed: 1,\n  //           sync: true,\n  //         },\n  //       },\n  //     },\n  //     destroy: {\n  //       mode: \"none\",\n  //       split: {\n  //         count: 1,\n  //         factor: {\n  //           random: {\n  //             enable: false,\n  //             minimumValue: 0,\n  //           },\n  //           value: 3,\n  //         },\n  //         rate: {\n  //           random: {\n  //             enable: false,\n  //             minimumValue: 0,\n  //           },\n  //           value: {\n  //             min: 4,\n  //             max: 9,\n  //           },\n  //         },\n  //       },\n  //     },\n  //     life: {\n  //       count: 1,\n  //       delay: {\n  //         random: {\n  //           enable: false,\n  //           minimumValue: 0,\n  //         },\n  //         value: 0.5,\n  //         sync: false,\n  //       },\n  //       duration: {\n  //         random: {\n  //           enable: false,\n  //           minimumValue: 0.0001,\n  //         },\n  //         value: 60,\n  //         sync: false,\n  //       },\n  //     },\n  //     // links: {\n  //     //   blink: false,\n  //     //   color: {\n  //     //     value: \"random\",\n  //     //   },\n  //     //   consent: false,\n  //     //   distance: 100,\n  //     //   enable: true,\n  //     //   frequency: 1,\n  //     //   opacity: 1,\n  //     //   shadow: {\n  //     //     blur: 5,\n  //     //     color: {\n  //     //       value: \"#00ff00\",\n  //     //     },\n  //     //     enable: false,\n  //     //   },\n  //     //   triangles: {\n  //     //     enable: false,\n  //     //     frequency: 1,\n  //     //   },\n  //     //   width: 1,\n  //     //   warp: false,\n  //     // },\n  //     move: {\n  //       angle: {\n  //         offset: 45,\n  //         value: 90,\n  //       },\n  //       attract: {\n  //         distance: 200,\n  //         enable: false,\n  //         rotate: {\n  //           x: 3000,\n  //           y: 3000,\n  //         },\n  //       },\n  //       decay: 0.002,\n  //       distance: 0,\n  //       direction: \"none\",\n  //       drift: 0,\n  //       enable: true,\n  //       gravity: {\n  //         acceleration: 9.81,\n  //         enable: false,\n  //         maxSpeed: 50,\n  //       },\n  //       path: {\n  //         clamp: true,\n  //         delay: {\n  //           random: {\n  //             enable: false,\n  //             minimumValue: 0,\n  //           },\n  //           value: 0,\n  //         },\n  //         enable: false,\n  //       },\n  //       outModes: {\n  //         default: \"destoy\",\n  //         bottom: \"bounce\",\n  //         left: \"bounce\",\n  //         right: \"bounce\",\n  //         top: \"bounce\",\n  //       },\n  //       random: false,\n  //       size: false,\n  //       speed: 1,\n  //       straight: false,\n  //       trail: {\n  //         enable: false,\n  //         length: 10,\n  //         fillColor: {\n  //           value: \"#000000\",\n  //         },\n  //       },\n  //       vibrate: false,\n  //       warp: false,\n  //     },\n  //     number: {\n  //       density: {\n  //         enable: true,\n  //         area: 800,\n  //         factor: 1000,\n  //       },\n  //       limit: 0,\n  //       value: 150,\n  //     },\n  //     opacity: {\n  //       random: {\n  //         enable: true,\n  //         minimumValue: 0.3,\n  //       },\n  //       value: {\n  //         min: 0.3,\n  //         max: 0.8,\n  //       },\n  //       animation: {\n  //         count: 0,\n  //         enable: true,\n  //         speed: 0.5,\n  //         sync: false,\n  //         destroy: \"none\",\n  //         minimumValue: 0.3,\n  //         startValue: \"random\",\n  //       },\n  //     },\n  //     reduceDuplicates: false,\n  //     rotate: {\n  //       random: {\n  //         enable: false,\n  //         minimumValue: 0,\n  //       },\n  //       value: 0,\n  //       animation: {\n  //         enable: false,\n  //         speed: 0,\n  //         sync: false,\n  //       },\n  //       direction: \"clockwise\",\n  //       path: false,\n  //     },\n  //     shadow: {\n  //       blur: 0,\n  //       color: {\n  //         value: \"#000000\",\n  //       },\n  //       enable: false,\n  //       offset: {\n  //         x: 0,\n  //         y: 0,\n  //       },\n  //     },\n  //     shape: {\n  //       options: {\n  //         image: [null],\n  //         images: [null],\n  //       },\n  //       type: \"circle\",\n  //     },\n  //     size: {\n  //       random: {\n  //         enable: true,\n  //         minimumValue: 1,\n  //       },\n  //       value: {\n  //         min: 1,\n  //         max: 3,\n  //       },\n  //       animation: {\n  //         count: 0,\n  //         enable: true,\n  //         speed: 3,\n  //         sync: false,\n  //         destroy: \"none\",\n  //         minimumValue: 1,\n  //         startValue: \"random\",\n  //       },\n  //     },\n  //     stroke: {\n  //       width: 0,\n  //     },\n  //     twinkle: {\n  //       lines: {\n  //         enable: false,\n  //         frequency: 0.05,\n  //         opacity: 1,\n  //       },\n  //       particles: {\n  //         enable: false,\n  //         frequency: 0.05,\n  //         opacity: 1,\n  //       },\n  //     },\n  //   },\n  //   pauseOnBlur: true,\n  //   pauseOnOutsideViewport: true,\n  //   responsive: [],\n  //   themes: [],\n  //   emitters: [\n  //     {\n  //       autoPlay: true,\n  //       life: {},\n  //       rate: {\n  //         quantity: 150,\n  //         delay: 50,\n  //       },\n  //       size: {\n  //         mode: \"percent\",\n  //         height: 0,\n  //         width: 0,\n  //       },\n  //       direction: \"none\",\n  //       position: {\n  //         x: 50,\n  //         y: 56,\n  //       },\n  //       move: {\n  //         speed: 1,\n  //         random: false,\n  //       },\n  //     },\n  //   ],\n  // };\n\n  const options = {\n    autoPlay: true,\n    background: {\n      color: {\n        value: \"#ffffff\",\n      },\n      image: \"\",\n      position: \"\",\n      repeat: \"\",\n      size: \"\",\n      opacity: 1,\n    },\n    backgroundMask: {\n      composite: \"destination-out\",\n      cover: {\n        color: {\n          value: \"#fff\",\n        },\n        opacity: 1,\n      },\n      enable: false,\n    },\n    fullScreen: {\n      enable: true,\n      zIndex: -1,\n    },\n    detectRetina: true,\n    fpsLimit: 60,\n    infection: {\n      cure: false,\n      delay: 0,\n      enable: false,\n      infections: 0,\n      stages: [],\n    },\n    interactivity: {\n      detectsOn: \"window\",\n      events: {\n        onClick: {\n          enable: true,\n          mode: [\"repulse\"],\n        },\n        onDiv: {\n          selectors: [\".ball\"],\n          enable: true,\n          mode: [\"bounce\"],\n          type: \"circle\",\n        },\n        onHover: {\n          enable: true,\n          mode: [\"attract\", \"connect\"],\n          parallax: {\n            enable: false,\n            force: 2,\n            smooth: 10,\n          },\n        },\n        resize: true,\n      },\n      modes: {\n        attract: {\n          distance: 200,\n          duration: 0.4,\n          easing: \"ease-out-quad\",\n          factor: 1,\n          maxSpeed: 30,\n          speed: 1,\n        },\n        bounce: {\n          distance: 200,\n        },\n        bubble: {\n          distance: 200,\n          duration: 0.4,\n        },\n        connect: {\n          distance: 80,\n          links: {\n            opacity: 0.5,\n          },\n          radius: 60,\n        },\n        grab: {\n          distance: 100,\n          links: {\n            blink: false,\n            consent: false,\n            opacity: 1,\n          },\n        },\n        light: {\n          area: {\n            gradient: {\n              start: {\n                value: \"#ffffff\",\n              },\n              stop: {\n                value: \"#000000\",\n              },\n            },\n            radius: 1000,\n          },\n          shadow: {\n            color: {\n              value: \"#000000\",\n            },\n            length: 2000,\n          },\n        },\n        push: {\n          quantity: 4,\n        },\n        remove: {\n          quantity: 2,\n        },\n        repulse: {\n          distance: 200,\n          duration: 0.4,\n          factor: 100,\n          speed: 1,\n          maxSpeed: 50,\n          easing: \"ease-out-quad\",\n        },\n        slow: {\n          factor: 3,\n          radius: 200,\n        },\n        trail: {\n          delay: 0.005,\n          pauseOnStop: false,\n          quantity: 5,\n          particles: {\n            color: {\n              value: \"#ff0000\",\n              animation: {\n                enable: true,\n                speed: 400,\n                sync: true,\n              },\n            },\n            collisions: {\n              enable: false,\n            },\n            links: {\n              enable: false,\n            },\n            move: {\n              outModes: {\n                default: \"destroy\",\n              },\n              speed: 1,\n            },\n            size: {\n              value: 5,\n              animation: {\n                enable: true,\n                speed: 5,\n                minimumValue: 1,\n                sync: true,\n                startValue: \"min\",\n                destroy: \"max\",\n              },\n            },\n          },\n        },\n      },\n    },\n    manualParticles: [],\n    motion: {\n      disable: false,\n      reduce: {\n        factor: 4,\n        value: true,\n      },\n    },\n    particles: {\n      bounce: {\n        horizontal: {\n          random: {\n            enable: false,\n            minimumValue: 0.1,\n          },\n          value: 1,\n        },\n        vertical: {\n          random: {\n            enable: false,\n            minimumValue: 0.1,\n          },\n          value: 1,\n        },\n      },\n      collisions: {\n        bounce: {\n          horizontal: {\n            random: {\n              enable: false,\n              minimumValue: 0.1,\n            },\n            value: 1,\n          },\n          vertical: {\n            random: {\n              enable: false,\n              minimumValue: 0.1,\n            },\n            value: 1,\n          },\n        },\n        enable: true,\n        mode: \"bounce\",\n        overlap: {\n          enable: true,\n          retries: 0,\n        },\n      },\n      color: {\n        value: \"#f00\",\n        animation: {\n          h: {\n            count: 0,\n            enable: true,\n            offset: 0,\n            speed: 50,\n            sync: false,\n          },\n          s: {\n            count: 0,\n            enable: false,\n            offset: 0,\n            speed: 1,\n            sync: true,\n          },\n          l: {\n            count: 0,\n            enable: false,\n            offset: 0,\n            speed: 1,\n            sync: true,\n          },\n        },\n      },\n      destroy: {\n        mode: \"none\",\n        split: {\n          count: 1,\n          factor: {\n            random: {\n              enable: false,\n              minimumValue: 0,\n            },\n            value: 3,\n          },\n          rate: {\n            random: {\n              enable: false,\n              minimumValue: 0,\n            },\n            value: {\n              min: 4,\n              max: 9,\n            },\n          },\n        },\n      },\n      life: {\n        count: 0,\n        delay: {\n          random: {\n            enable: false,\n            minimumValue: 0,\n          },\n          value: 0,\n          sync: false,\n        },\n        duration: {\n          random: {\n            enable: false,\n            minimumValue: 0.0001,\n          },\n          value: 0,\n          sync: false,\n        },\n      },\n      // links: {\n      //   blink: false,\n      //   color: {\n      //     value: \"random\",\n      //   },\n      //   consent: false,\n      //   distance: 100,\n      //   enable: true,\n      //   frequency: 1,\n      //   opacity: 1,\n      //   shadow: {\n      //     blur: 5,\n      //     color: {\n      //       value: \"#00ff00\",\n      //     },\n      //     enable: false,\n      //   },\n      //   triangles: {\n      //     enable: false,\n      //     frequency: 1,\n      //   },\n      //   width: 1,\n      //   warp: false,\n      // },\n      move: {\n        angle: {\n          offset: 45,\n          value: 90,\n        },\n        attract: {\n          distance: 200,\n          enable: false,\n          rotate: {\n            x: 3000,\n            y: 3000,\n          },\n        },\n        decay: 0.001,\n        distance: 0,\n        direction: \"none\",\n        drift: 0,\n        enable: true,\n        gravity: {\n          acceleration: 9.81,\n          enable: false,\n          maxSpeed: 50,\n        },\n        path: {\n          clamp: true,\n          delay: {\n            random: {\n              enable: false,\n              minimumValue: 0,\n            },\n            value: 0,\n          },\n          enable: false,\n        },\n        outModes: {\n          default: \"destoy\",\n          bottom: \"bounce\",\n          left: \"bounce\",\n          right: \"bounce\",\n          top: \"bounce\",\n        },\n        random: false,\n        size: false,\n        speed: 1,\n        straight: false,\n        trail: {\n          enable: false,\n          length: 10,\n          fillColor: {\n            value: \"#000000\",\n          },\n        },\n        vibrate: false,\n        warp: false,\n      },\n      number: {\n        density: {\n          enable: true,\n          area: 800,\n          factor: 1000,\n        },\n        limit: 0,\n        value: 200,\n      },\n      opacity: {\n        random: {\n          enable: true,\n          minimumValue: 0.3,\n        },\n        value: {\n          min: 0.3,\n          max: 0.8,\n        },\n        animation: {\n          count: 0,\n          enable: true,\n          speed: 0.5,\n          sync: false,\n          destroy: \"none\",\n          minimumValue: 0.3,\n          startValue: \"random\",\n        },\n      },\n      reduceDuplicates: false,\n      rotate: {\n        random: {\n          enable: false,\n          minimumValue: 0,\n        },\n        value: 0,\n        animation: {\n          enable: false,\n          speed: 0,\n          sync: false,\n        },\n        direction: \"clockwise\",\n        path: false,\n      },\n      shadow: {\n        blur: 0,\n        color: {\n          value: \"#000000\",\n        },\n        enable: false,\n        offset: {\n          x: 0,\n          y: 0,\n        },\n      },\n      shape: {\n        options: {\n          image: [null],\n          images: [null],\n        },\n        type: \"circle\",\n      },\n      size: {\n        random: {\n          enable: true,\n          minimumValue: 1,\n        },\n        value: {\n          min: 1,\n          max: 3,\n        },\n        animation: {\n          count: 0,\n          enable: true,\n          speed: 3,\n          sync: false,\n          destroy: \"none\",\n          minimumValue: 1,\n          startValue: \"random\",\n        },\n      },\n      stroke: {\n        width: 0,\n      },\n      twinkle: {\n        lines: {\n          enable: false,\n          frequency: 0.05,\n          opacity: 1,\n        },\n        particles: {\n          enable: false,\n          frequency: 0.05,\n          opacity: 1,\n        },\n      },\n    },\n    pauseOnBlur: true,\n    pauseOnOutsideViewport: true,\n    responsive: [],\n    themes: [],\n  };\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      {/* <Particles\n        id=\"tsparticles\"\n        container={containerRef}\n        options={options}\n      ></Particles> */}\n      <Router>\n        <Switch>\n          <Route exact path=\"/book\"></Route>\n          <Route exact path=\"/flipbook\"></Route>\n          <Route exact path=\"/textpage\">\n            <TextPage></TextPage>\n          </Route>\n          <Route path=\"/\">\n            <CustomMenu></CustomMenu>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/fmammoli/Projects/react-circular-test/src/CircularMenu.js",[],"/Users/fmammoli/Projects/react-circular-test/src/index.js",[],"/Users/fmammoli/Projects/react-circular-test/src/CustomMenu.js",[],"/Users/fmammoli/Projects/react-circular-test/src/TextPage.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":3,"column":8,"nodeType":"38","messageId":"39","endLine":3,"endColumn":17},{"ruleId":"36","severity":1,"message":"40","line":519,"column":9,"nodeType":"38","messageId":"39","endLine":519,"endColumn":16},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'Particles' is defined but never used.","Identifier","unusedVar","'options' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]